/* Generated By:JavaCC: Do not edit this line. NSISHelpSearchQueryParserConstants.java */
package net.sf.eclipsensis.help.search.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NSISHelpSearchQueryParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int _NUM_CHAR = 1;
  /** RegularExpression Id. */
  int _ESCAPED_CHAR = 2;
  /** RegularExpression Id. */
  int _TERM_START_CHAR = 3;
  /** RegularExpression Id. */
  int _TERM_CHAR = 4;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int OR = 10;
  /** RegularExpression Id. */
  int NOT = 11;
  /** RegularExpression Id. */
  int PLUS = 12;
  /** RegularExpression Id. */
  int MINUS = 13;
  /** RegularExpression Id. */
  int LPAREN = 14;
  /** RegularExpression Id. */
  int RPAREN = 15;
  /** RegularExpression Id. */
  int COLON = 16;
  /** RegularExpression Id. */
  int CARAT = 17;
  /** RegularExpression Id. */
  int QUOTED = 18;
  /** RegularExpression Id. */
  int TERM = 19;
  /** RegularExpression Id. */
  int FUZZY_SLOP = 20;
  /** RegularExpression Id. */
  int WILDTERM = 21;
  /** RegularExpression Id. */
  int RANGEIN_START = 22;
  /** RegularExpression Id. */
  int RANGEEX_START = 23;
  /** RegularExpression Id. */
  int NUMBER = 24;
  /** RegularExpression Id. */
  int RANGEIN_TO = 25;
  /** RegularExpression Id. */
  int RANGEIN_END = 26;
  /** RegularExpression Id. */
  int RANGEIN_QUOTED = 27;
  /** RegularExpression Id. */
  int RANGEIN_GOOP = 28;
  /** RegularExpression Id. */
  int RANGEEX_TO = 29;
  /** RegularExpression Id. */
  int RANGEEX_END = 30;
  /** RegularExpression Id. */
  int RANGEEX_QUOTED = 31;
  /** RegularExpression Id. */
  int RANGEEX_GOOP = 32;

  /** Lexical state. */
  int Boost = 0;
  /** Lexical state. */
  int RangeEx = 1;
  /** Lexical state. */
  int RangeIn = 2;
  /** Lexical state. */
  int DEFAULT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>", //$NON-NLS-1$
    "<_NUM_CHAR>", //$NON-NLS-1$
    "<_ESCAPED_CHAR>", //$NON-NLS-1$
    "<_TERM_START_CHAR>", //$NON-NLS-1$
    "<_TERM_CHAR>", //$NON-NLS-1$
    "\" \"", //$NON-NLS-1$
    "\"\\t\"", //$NON-NLS-1$
    "\"\\r\"", //$NON-NLS-1$
    "\"\\n\"", //$NON-NLS-1$
    "<AND>", //$NON-NLS-1$
    "<OR>", //$NON-NLS-1$
    "<NOT>", //$NON-NLS-1$
    "\"+\"", //$NON-NLS-1$
    "\"-\"", //$NON-NLS-1$
    "\"(\"", //$NON-NLS-1$
    "\")\"", //$NON-NLS-1$
    "\":\"", //$NON-NLS-1$
    "\"^\"", //$NON-NLS-1$
    "<QUOTED>", //$NON-NLS-1$
    "<TERM>", //$NON-NLS-1$
    "<FUZZY_SLOP>", //$NON-NLS-1$
    "<WILDTERM>", //$NON-NLS-1$
    "\"[\"", //$NON-NLS-1$
    "\"{\"", //$NON-NLS-1$
    "<NUMBER>", //$NON-NLS-1$
    "\"TO\"", //$NON-NLS-1$
    "\"]\"", //$NON-NLS-1$
    "<RANGEIN_QUOTED>", //$NON-NLS-1$
    "<RANGEIN_GOOP>", //$NON-NLS-1$
    "\"TO\"", //$NON-NLS-1$
    "\"}\"", //$NON-NLS-1$
    "<RANGEEX_QUOTED>", //$NON-NLS-1$
    "<RANGEEX_GOOP>", //$NON-NLS-1$
  };

}
